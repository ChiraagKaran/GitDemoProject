### BASIC COMMANDS
git --version                                   [gives git version]
git config --global user.name "ChiraagKaran"    [creates a global variable and adds value to it]
git config --global --list                      [lists all global variables]
git init -b main                                [creates a branch called 'main' in the current directory you are in]
git status                                      [shows status of the directory]
git add NOTES.txt                               [adds/stages the file 'NOTES.txt', which is in this directory, to be tracked by Git]
git add .                                       [adds all files in the dir/repo]
git commit -m "MyFirstCommit"                   [commits all the changes to Git, but file needs to be staged first after each change]
git commit -a -m "MyThirdCommit"                [commits all the changes directly]
git log                                         [gives log of all the changes made in the repo. Hit 'q' to exit. Explore more on this.]

NOTE: Each time a change is made in a file, the file gets unstaged. Only staged files can be committed.

git diff                                        [shows changes made since last commit while the modified file is unstaged]
git diff --staged                               [shows changes made since last commit while the modified file is staged]
git rm --cached ReadMe.md                       [unstages file]

ssh-keygen -o                                   [Creates an SSH key and stores it in a file. Right now it's in 'C:\Users\chira/.ssh/id_rsa.pub']

git remote add origin git@github.com:ChiraagKaran/NewRepo.git               [associate local repository with the URL of a GitHub repo]
git push -u origin main                                                     [push the 'main' branch into GitHub repo]
git remote set-url origin git@github.com:ChiraagKaran/GitDemoProject.git    [associate with another URL instead / switch GitHub repo]

NOTE: Each commit is a version

git remote -v                                   [shows the GitHub repository that the local one is connected to]
git tag v1.1 -m "release 1"                     [creates a tag that can be used for versioning]
git tag                                         [gives the list of all tags created]

git push origin v1.1                            [assign the tag created offline to whatever's there currently in the GitHub repo and creates zip file with verion as 'v1.1']

git checkout -b dev                             [creates new branch]
git switch dev                                  [switches to dev branch]
git branch                                      [shows list of branchs]
git branch --all                                [shows list of branchs including GitHub branches]
git branch -d dev                               [deletes dev branch]

NOTES: Repository is made of multiple branches. When new branch is created locally in Git and then pushed to Origin/GitHup Repo, a new branch with same name is created in GitHub Repo automatically.

git merge dev                                   [brings in all code from dev to main branch while existing code remains. Command works only when we are in main branch]

NOTE: When you switch to a branch, the actuall project folder in explorer also gets changed showing different files that are there only in that branch.

git pull origin main                            [pulls the latest version from Github to local repo]
git reset <commit hash>                         [goes back to however it was at that particular commit. All changes after that commit gets reverted.]
